@model HotelZaPse.Models.BO.RezervacijaBo

@{

    if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
    {
        ViewBag.Title = "Kreiranje rezervacije";
    }
    else
    {
        ViewBag.Title = "Book";
    }
}

<div class="page-header">
    @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
    {
        <h2><i class="far fa-calendar-alt"></i>&nbsp;&nbsp;&nbsp;&nbsp;Rezervacija</h2>
    }
    else
    {
        <h2><i class="far fa-calendar-alt"></i>&nbsp;&nbsp;&nbsp;&nbsp;Booking</h2>
    }

</div>


<div class="margtop20">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            @foreach (var item in ViewBag.selectedIds)
            {
                <input type="hidden" name="SelectedPasIds" value="@item" />
            }

            <div class="form-group">
                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    <label class="control-label col-md-2" for="Usluga_Naziv">Usluga</label>
                }
                else
                {
                    <label class="control-label col-md-2" for="Usluga_Naziv">Service</label>
                }

                <div class="col-md-8">

                    @Html.DropDownListFor(
                               model => model.Usluga.Id,
                               new SelectList(ViewBag.Usluge, "UslugaId", "Naziv", 0),
                               new { @class = "form-control", @onchange = "OnSelectedUsluga(this.value)" })

                    <div id="uslugaValidation">
                        @Html.ValidationMessage("Usluga", new { @class = "text-danger" })
                    </div>

                </div>
            </div>


            <div id="uslugaDetails">
                @{Html.RenderAction("UslugaDetails", "Usluga", new { id = 0 });}
            </div>


            <div class="form-group">

                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    @Html.LabelFor(model => model.Prijava, htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    <label class="control-label col-md-2">Check-in</label>
                }
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Prijava, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Prijava, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    @Html.LabelFor(model => model.Odjava, htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    <label class="control-label col-md-2">Check-out</label>
                }
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Odjava, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Odjava, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    @Html.LabelFor(model => model.Napomena, htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    <label class="control-label col-md-2">Note</label>
                }

                <div class="col-md-8">
                    @Html.EditorFor(model => model.Napomena, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Napomena, "", new { @class = "text-danger" })
                </div>
            </div>


            @*style = "white-space: pre-line" -> za prikaz Environment.NewLine*@
            @Html.ValidationMessage("Overbooked", new { @class = "text-danger", @style = "white-space: pre-line" })
            @Html.ValidationMessage("Overlaping", new { @class = "text-danger", @style = "white-space: pre-line" })

            <div class="form-group">
                <div class="col-md-offset-2 col-md-8">
                    @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                    {
                        <a class="btn btn-custom" href="@Url.Action("PsiCheckBoxes", "Rezervacija")">Nazad</a>
                        <input type="submit" value="Rezerviši" class="btn btn-custom" />
                    }
                    else
                    {
                        <a class="btn btn-custom" href="@Url.Action("PsiCheckBoxes", "Rezervacija")">Back</a>
                        <input type="submit" value="Book" class="btn btn-custom" />
                    }
                </div>
            </div>
        </div>


    }

</div>


<script>
    function OnSelectedUsluga(uslugaId) {

        //var element = document.getElementById('hiddenUslugaId');
        //element.value = uslugaId;

        if (uslugaId != 0) {
            $('#uslugaValidation').addClass('hidden');
        }
        else {
            $('#uslugaValidation').removeClass('hidden');
        }


        $.ajax({
            url: '@Url.Action("UslugaDetails", "Usluga")',
            data: { id: uslugaId },
            success: function (result) {
                $('#uslugaDetails').html(result);
            }
        });

    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
