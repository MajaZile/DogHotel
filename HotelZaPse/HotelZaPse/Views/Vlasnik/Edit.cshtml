@model HotelZaPse.Models.BO.VlasnikBo

@{
   
    if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
    {
        ViewBag.Title = Model.Ime + " " + Model.Prezime + " | Izmena profila";
    }
    else
    {
        ViewBag.Title = Model.Ime + " " + Model.Prezime + " | Edit profile";
    }
}

<div class="page-header">
    @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
    {
        <h2>Izmeni profil</h2>
    }
    else
    {
        <h2>Edit profile</h2>
    }

</div>

<div class="margtop20">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">

                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    @Html.LabelFor(model => model.Ime, htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    <label class="control-label col-md-2">First name</label>
                }
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Ime, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Ime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    @Html.LabelFor(model => model.Prezime, htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    <label class="control-label col-md-2">Last name</label>
                }
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Prezime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Prezime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    @Html.LabelFor(model => model.Adresa, htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    <label class="control-label col-md-2">Adress</label>
                }
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Adresa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adresa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    @Html.LabelFor(model => model.Telefon, htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    <label class="control-label col-md-2">Phone</label>
                }
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <a href="#" data-toggle="popover" data-content="Mail ne može biti promenjen.">
                        @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </a>
                    @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">

                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    @Html.LabelFor(model => model.Lozinka, htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    <label class="control-label col-md-2">Password</label>
                }
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Lozinka, new { htmlAttributes = new { @class = "form-control", @type = "password", @onchange = "OnLozinkaChange()" } })
                    @Html.ValidationMessageFor(model => model.Lozinka, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group hidden">

                @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                {
                    <label class="control-label col-md-2" for="Lozinka2">Potvrdi lozinku</label>
                }
                else
                {
                    <label class="control-label col-md-2" for="Lozinka2">Repeat password</label>
                }
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Lozinka2, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.Lozinka2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-8">
                    @if (HttpContext.Current.Request.Cookies["LangCookie"].Value == "lang=RS")
                    {
                        @Html.ActionLink("Odustani", "ViewProfile", null, new { @class = "btn btn-custom", @type = "button" })
                        <input type="submit" value="Snimi" class="btn btn-custom" />
                    }
                    else
                    {
                        @Html.ActionLink("Cancel", "ViewProfile", null, new { @class = "btn btn-custom", @type = "button" })
                        <input type="submit" value="Save" class="btn btn-custom" />
                    }


                </div>
            </div>
        </div>
    }
</div>



@{Html.RenderAction("GetPsi", "Pas");}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(function () {
        $('[data-toggle="popover"]').popover();
    });

    function OnLozinkaChange() {
        $('div.form-group').removeClass('hidden');
    }


</script>